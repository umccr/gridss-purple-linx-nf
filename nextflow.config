params {
  // Input
  tumour_name = 'SEQC-II_Tumor_50pc'
  normal_name = 'SEQC-II_Normal'
  tumour_bam = 'data/sample/SEQC-II_Tumor_50pc-ready.bam'
  normal_bam = 'data/sample/SEQC-II_Normal-ready.bam'
  tumour_bam_index = 'data/sample/SEQC-II_Tumor_50pc-ready.bam.bai'
  normal_bam_index = 'data/sample/SEQC-II_Normal-ready.bam.bai'
  tumour_smlv_vcf = 'data/sample/SEQC-II-50pc-ensemble-annotated.vcf.gz'
  tumour_sv_vcf = 'data/sample/SEQC-II-50pc-manta.vcf.gz'
  // Output
  output_dir = 'output'
  publish_mode = 'symlink'
  // Options
  annotate_gridss_calls = true
  cpus = 4
  // Reference data
  // Reference genome
  ref_data_genome = 'data/reference/genome/umccrise_hg38/hg38.fa'
  // AMBER, COBALT
  ref_data_amber_loci = 'data/reference/Amber/38/GermlineHetPon.38.vcf.gz'
  ref_data_cobalt_gc_profile = 'data/reference/Cobalt/38/GC_profile.1000bp.38.cnp'
  // GRIDSS
  ref_data_gridss_blacklist = 'data/reference/GRIDSS/38/ENCFF356LFX.bed'
  ref_data_gridss_breakend_pon = 'data/reference/GRIDSS/38/gridss_pon_single_breakend.38.bed'
  ref_data_gridss_breakpoint_pon = 'data/reference/GRIDSS/38/gridss_pon_breakpoint.38.bedpe'
  // Linx
  ref_data_linx_fragile_sites = 'data/reference/Linx/38/fragile_sites_hmf.38.csv'
  ref_data_linx_line_elements = 'data/reference/Linx/38/line_elements.38.csv'
  ref_data_linx_rep_origins = 'data/reference/Linx/38/heli_rep_origins_empty.bed'
  ref_data_linx_gene_transcript_dir = 'data/reference/Ensembl-Data-Cache/38'
  // Misc
  ref_data_known_hotspots = 'data/reference/Sage/38/KnownHotspots.somatic.38.vcf.gz'
  ref_data_known_fusions = 'data/reference/Known-Fusions/38/known_fusions.38.bedpe'
  ref_data_known_fusion_data = 'data/reference/Known-Fusions/38/known_fusion_data.38.csv'
  ref_data_driver_gene_panel = 'data/reference/Gene-Panel/38/DriverGenePanel.38.tsv'
  // GRIDSS JAR
  gridss_jar = 'software/gridss/gridss-2.12.2-gridss-jar-with-dependencies.jar'
  gridss_jvmheap = '26g'
}

docker.enabled = true

process.container = 'scwatts/gpl:0.0.3'
process.cpus = params.cpus
process.cache = 'lenient'

// Fail task if any command returns non-zero exit code
shell = ['/bin/bash', '-euo', 'pipefail']

dag {
  enabled = true
  file = 'output/nextflow/reports/dag.svg'
}

report {
  enabled = true
  file = 'output/nextflow/reports/report.html'
}

timeline {
  enabled = true
  file = 'output/nextflow/reports/timeline.html'
}

trace {
  enabled = true
  file = 'output/nextflow/reports/trace.txt'
}

